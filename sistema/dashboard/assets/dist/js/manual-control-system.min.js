class DashboardState{constructor(){this.database={status:'unknown',connected:false,schema_ready:false,dis_count:0,sufficient:false,last_check:null};this.charts={loaded:false,available_types:['temporal','taxes','expenses','currencies','states','correlation'],failed_types:[],last_load:null};this.stats={loaded:false,data:{},last_load:null};this.autoRefresh={enabled:false,interval:30000,timer:null};this.operations={active:new Set(),history:[]};this.init()}init(){this.loadPersistedState();this.setupEventHandlers();console.log('‚úÖ DashboardState inicializado')}canLoadCharts(){return this.database.connected && this.database.schema_ready && this.database.sufficient && this.database.dis_count > 0}canLoadStats(){return this.database.connected && this.database.schema_ready && this.database.dis_count > 0}getNextRecommendedAction(){if(!this.database.connected){return{action:'verify_database',title:'Verificar Conex√£o do Banco',description:'Sistema precisa verificar status do MySQL',priority:'high',icon:'database'}}if(!this.database.schema_ready){return{action:'setup_schema',title:'Configurar Schema do Banco',description:'Estrutura do banco precisa ser instalada',priority:'high',icon:'settings'}}if(this.database.dis_count===0){return{action:'import_xml',title:'Importar XMLs de DI',description:'Sistema precisa de dados para funcionar',priority:'medium',icon:'upload'}}if(!this.charts.loaded){return{action:'load_charts',title:'Carregar Gr√°ficos',description:'Visualiza√ß√µes est√£o prontas para carregamento',priority:'low',icon:'chart'}}return{action:'system_ready',title:'Sistema Operacional',description:'Todas as funcionalidades est√£o dispon√≠veis',priority:'info',icon:'check'}}updateDatabaseState(dbStatus){const previous={...this.database};this.database={...this.database,...dbStatus,sufficient:dbStatus.dis_count > 0,last_check:new Date().toISOString()};if(previous.connected !==this.database.connected || previous.dis_count !==this.database.dis_count){this.emit('database-changed',this.database,previous)}this.persistState()}updateChartsState(chartsData){this.charts={...this.charts,loaded:true,last_load:new Date().toISOString(),failed_types:chartsData.failed || []};this.emit('charts-loaded',this.charts);this.persistState()}updateStatsState(statsData){this.stats={loaded:true,data:statsData,last_load:new Date().toISOString()};this.emit('stats-loaded',this.stats);this.persistState()}setOperationActive(operationId,details={}){this.operations.active.add(operationId);this.operations.history.unshift({id:operationId,status:'active',started:new Date().toISOString(),...details});this.emit('operation-started',operationId)}setOperationComplete(operationId,result={}){this.operations.active.delete(operationId);const historyItem=this.operations.history.find(h=> h.id===operationId);if(historyItem){historyItem.status=result.success ? 'completed':'failed';historyItem.completed=new Date().toISOString();historyItem.result=result}this.emit('operation-completed',operationId,result)}isOperationActive(operationId){return this.operations.active.has(operationId)}setupEventHandlers(){this.eventListeners=new Map()}on(event,callback){if(!this.eventListeners.has(event)){this.eventListeners.set(event,[])}this.eventListeners.get(event).push(callback)}emit(event,...args){const listeners=this.eventListeners.get(event);if(listeners){listeners.forEach(callback=>{try{callback(...args)}catch(error){console.error(`Erro no event listener ${event}:`,error)}})}}persistState(){try{const stateToSave={database:this.database,charts:this.charts,stats:this.stats,autoRefresh:this.autoRefresh,saved_at:new Date().toISOString()};localStorage.setItem('etl_dashboard_state',JSON.stringify(stateToSave))}catch(error){console.warn('Erro ao persistir estado:',error)}}loadPersistedState(){try{const saved=localStorage.getItem('etl_dashboard_state');if(saved){const state=JSON.parse(saved);const now=new Date();const savedAt=new Date(state.saved_at);if(now-savedAt < 3600000){this.database={...this.database,...state.database};this.charts={...this.charts,...state.charts};this.stats={...this.stats,...state.stats};this.autoRefresh={...this.autoRefresh,...state.autoRefresh}}}}catch(error){console.warn('Erro ao carregar estado persistido:',error)}}}class AutoRefreshManager{constructor(dashboardState){this.state=dashboardState;this.timer=null;this.isRunning=false;this.defaultInterval=30000;this.currentInterval=this.defaultInterval;this.callbacks={onRefresh:null,onStart:null,onStop:null,onError:null}}setCallbacks(callbacks){this.callbacks={...this.callbacks,...callbacks}}start(interval=null){if(this.isRunning){this.stop()}this.currentInterval=interval || this.currentInterval;this.isRunning=true;this.timer=setInterval(()=>{this.executeRefresh()},this.currentInterval);this.state.autoRefresh.enabled=true;this.state.autoRefresh.interval=this.currentInterval;this.state.persistState();if(this.callbacks.onStart){this.callbacks.onStart(this.currentInterval)}console.log(`üîÑ Auto-refresh iniciado:${this.currentInterval/1000}s`)}stop(){if(this.timer){clearInterval(this.timer);this.timer=null}this.isRunning=false;this.state.autoRefresh.enabled=false;this.state.persistState();if(this.callbacks.onStop){this.callbacks.onStop()}console.log('‚èπÔ∏è Auto-refresh parado')}toggle(interval=null){if(this.isRunning){this.stop()}else{this.start(interval)}return this.isRunning}updateInterval(newInterval){this.currentInterval=newInterval;if(this.isRunning){this.stop();this.start(newInterval)}this.state.autoRefresh.interval=newInterval;this.state.persistState()}async executeRefresh(){if(!this.callbacks.onRefresh){console.warn('Callback onRefresh n√£o configurado');return}try{console.log('üîÑ Executando auto-refresh...');await this.callbacks.onRefresh()}catch(error){console.error('Erro no auto-refresh:',error);if(this.callbacks.onError){this.callbacks.onError(error)}}}getStatus(){return{isRunning:this.isRunning,interval:this.currentInterval,nextRefresh:this.isRunning ? new Date(Date.now()+this.currentInterval).toISOString():null}}}class FeedbackSystem{constructor(){this.container=null;this.activeToasts=new Map();this.loadingStates=new Map();this.init()}init(){this.createContainer();console.log('‚úÖ FeedbackSystem inicializado')}createContainer(){this.container=document.createElement('div');this.container.id='feedback-container';this.container.className='feedback-container';document.body.appendChild(this.container);if(!document.getElementById('feedback-system-styles')){this.addStyles()}}showToast(message,type='info',options={}){const id=`toast-${Date.now()}-${Math.random().toString(36).substr(2,9)}`;const duration=options.duration || this.getDefaultDuration(type);const persistent=options.persistent || false;const toast=document.createElement('div');toast.id=id;toast.className=`feedback-toast toast-${type}`;toast.innerHTML=` <div class="toast-icon"> ${this.getIcon(type)}</div> <div class="toast-content"> <div class="toast-message">${message}</div> ${options.subtitle ? `<div class="toast-subtitle">${options.subtitle}</div>`:''}</div> <button class="toast-close" aria-label="Fechar"> <svg width="14" height="14" viewBox="0 0 24 24" fill="none"> <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2"/> </svg> </button> `;const closeBtn=toast.querySelector('.toast-close');closeBtn.addEventListener('click',()=> this.removeToast(id));this.container.appendChild(toast);this.activeToasts.set(id,toast);requestAnimationFrame(()=>{toast.classList.add('toast-show')});if(!persistent && duration > 0){setTimeout(()=>{this.removeToast(id)},duration)}return id}removeToast(id){const toast=this.activeToasts.get(id);if(toast){toast.classList.add('toast-hide');setTimeout(()=>{if(toast.parentNode){toast.parentNode.removeChild(toast)}this.activeToasts.delete(id)},300)}}showLoading(elementId,message='Carregando...'){const element=document.getElementById(elementId);if(!element)return;const overlay=document.createElement('div');overlay.className='loading-overlay';overlay.innerHTML=` <div class="loading-content"> <div class="loading-spinner"> <div class="spinner"></div> </div> <div class="loading-message">${message}</div> </div> `;element.style.position='relative';element.appendChild(overlay);this.loadingStates.set(elementId,overlay);return overlay}hideLoading(elementId){const overlay=this.loadingStates.get(elementId);if(overlay){overlay.classList.add('loading-hide');setTimeout(()=>{if(overlay.parentNode){overlay.parentNode.removeChild(overlay)}this.loadingStates.delete(elementId)},300)}}showProgress(title,message='',progress=0){let progressContainer=document.getElementById('global-progress');if(!progressContainer){progressContainer=document.createElement('div');progressContainer.id='global-progress';progressContainer.className='global-progress';document.body.appendChild(progressContainer)}progressContainer.innerHTML=` <div class="progress-overlay"> <div class="progress-modal"> <div class="progress-header"> <h4>${title}</h4> </div> <div class="progress-body"> <div class="progress-message">${message}</div> <div class="progress-bar"> <div class="progress-fill" style="width:${progress}%"></div> </div> <div class="progress-percent">${Math.round(progress)}%</div> </div> </div> </div> `;progressContainer.style.display='block'}updateProgress(progress,message=null){const progressContainer=document.getElementById('global-progress');if(!progressContainer)return;const progressFill=progressContainer.querySelector('.progress-fill');const progressPercent=progressContainer.querySelector('.progress-percent');const progressMessage=progressContainer.querySelector('.progress-message');if(progressFill){progressFill.style.width=`${progress}%`}if(progressPercent){progressPercent.textContent=`${Math.round(progress)}%`}if(message && progressMessage){progressMessage.textContent=message}}hideProgress(){const progressContainer=document.getElementById('global-progress');if(progressContainer){progressContainer.style.display='none'}}getDefaultDuration(type){const durations={success:4000,error:8000,warning:6000,info:5000};return durations[type] || 5000}getIcon(type){const icons={success:'<svg width="20" height="20" viewBox="0 0 24 24" fill="none"><path d="M9 12L11 14L15 10M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="currentColor" stroke-width="2"/></svg>',error:'<svg width="20" height="20" viewBox="0 0 24 24" fill="none"><path d="M12 8V12M12 16H12.01M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="currentColor" stroke-width="2"/></svg>',warning:'<svg width="20" height="20" viewBox="0 0 24 24" fill="none"><path d="M12 9V13M12 17H12.01M10.29 3.86L1.82 18C1.64466 18.3024 1.55685 18.6453 1.56567 18.9928C1.57449 19.3403 1.67953 19.6781 1.87013 19.9725C2.06073 20.2669 2.33033 20.5068 2.6492 20.6687C2.96806 20.8305 3.32405 20.9089 3.68 20.896H20.32C20.676 20.9089 21.0319 20.8305 21.3508 20.6687C21.6697 20.5068 21.9393 20.2669 22.1299 19.9725C22.3205 19.6781 22.4255 19.3403 22.4343 18.9928C22.4432 18.6453 22.3553 18.3024 22.18 18L13.71 3.86C13.5317 3.56611 13.2807 3.32312 12.9812 3.15448C12.6817 2.98585 12.3437 2.89725 12 2.89725C11.6563 2.89725 11.3183 2.98585 11.0188 3.15448C10.7193 3.32312 10.4683 3.56611 10.29 3.86V3.86Z" stroke="currentColor" stroke-width="2"/></svg>',info:'<svg width="20" height="20" viewBox="0 0 24 24" fill="none"><path d="M13 16H12V12H11M12 8H12.01M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="currentColor" stroke-width="2"/></svg>',loading:'<svg width="20" height="20" viewBox="0 0 24 24" fill="none"><path d="M21 12C21 16.9706 16.9706 21 12 21M3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="currentColor" stroke-width="2"/></svg>'};return icons[type] || icons.info}addStyles(){const styles=document.createElement('style');styles.id='feedback-system-styles';styles.textContent=` .feedback-container{position:fixed;top:20px;right:20px;z-index:10000;pointer-events:none;max-width:400px}.feedback-toast{display:flex;align-items:center;background:white;border-radius:12px;padding:16px;margin-bottom:12px;box-shadow:0 8px 32px rgba(0,0,0,0.12);border-left:4px solid #E5E7EB;pointer-events:all;transform:translateX(100%);opacity:0;transition:all 0.3s ease;max-width:100%}.feedback-toast.toast-show{transform:translateX(0);opacity:1}.feedback-toast.toast-hide{transform:translateX(100%);opacity:0}.feedback-toast.toast-success{border-left-color:#10B981}.feedback-toast.toast-error{border-left-color:#EF4444}.feedback-toast.toast-warning{border-left-color:#F59E0B}.feedback-toast.toast-info{border-left-color:#3B82F6}.toast-icon{flex-shrink:0;margin-right:12px;color:inherit}.toast-success .toast-icon{color:#10B981}.toast-error .toast-icon{color:#EF4444}.toast-warning .toast-icon{color:#F59E0B}.toast-info .toast-icon{color:#3B82F6}.toast-content{flex:1;min-width:0}.toast-message{font-weight:500;color:#111827;font-size:14px;line-height:1.4}.toast-subtitle{color:#6B7280;font-size:12px;margin-top:2px}.toast-close{flex-shrink:0;background:none;border:none;color:#9CA3AF;cursor:pointer;padding:4px;border-radius:4px;margin-left:8px;transition:color 0.2s}.toast-close:hover{color:#6B7280;background:#F3F4F6}.loading-overlay{position:absolute;top:0;left:0;right:0;bottom:0;background:rgba(255,255,255,0.9);display:flex;align-items:center;justify-content:center;z-index:1000;border-radius:inherit;backdrop-filter:blur(2px)}.loading-content{text-align:center;color:#6B7280}.loading-spinner{margin-bottom:12px}.spinner{width:24px;height:24px;border:2px solid #E5E7EB;border-top:2px solid #FF002D;border-radius:50%;animation:spin 1s linear infinite;margin:0 auto}.loading-message{font-size:14px;font-weight:500}.global-progress{position:fixed;top:0;left:0;right:0;bottom:0;z-index:10001;display:none}.progress-overlay{position:absolute;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,0.5);display:flex;align-items:center;justify-content:center}.progress-modal{background:white;border-radius:16px;padding:24px;min-width:320px;max-width:90%;box-shadow:0 20px 40px rgba(0,0,0,0.15)}.progress-header h4{margin:0 0 16px 0;color:#111827;font-size:18px;font-weight:600}.progress-message{color:#6B7280;margin-bottom:16px;font-size:14px}.progress-bar{background:#E5E7EB;border-radius:8px;height:8px;overflow:hidden;margin-bottom:12px}.progress-fill{background:#FF002D;height:100%;border-radius:8px;transition:width 0.3s ease}.progress-percent{text-align:center;font-weight:600;color:#374151;font-size:14px}@keyframes spin{to{transform:rotate(360deg)}}`;document.head.appendChild(styles)}}class APIIntegration{constructor(feedbackSystem){this.feedback=feedbackSystem;this.baseUrl='/sistema/dashboard/api/dashboard';this.retryConfig={maxRetries:3,retryDelay:1000,exponentialBackoff:true}}async checkDatabaseStatus(){return this.makeRequest('/database-status.php',{method:'GET',description:'Verificando status do banco de dados'})}async executePreCheck(){return this.makeRequest('/pre-check.php',{method:'POST',description:'Executando verifica√ß√£o pr√©via'})}async clearCache(){return this.makeRequest('/clear-cache.php',{method:'POST',description:'Limpando cache do sistema'})}async loadChartsData(chartType='all'){const url=chartType==='all' ? '/charts.php':`/charts.php?type=${chartType}`;return this.makeRequest(url,{method:'GET',description:`Carregando dados dos gr√°ficos(${chartType})`})}async loadStats(){return this.makeRequest('/stats.php',{method:'GET',description:'Carregando estat√≠sticas do sistema'})}async makeRequest(endpoint,options={}){const url=`${this.baseUrl}${endpoint}`;const requestOptions={method:options.method || 'GET',headers:{'Content-Type':'application/json',...options.headers},...options.fetchOptions};if(options.body){requestOptions.body=JSON.stringify(options.body)}let lastError;for(let attempt=0;attempt <=this.retryConfig.maxRetries;attempt++){try{console.log(`üåê ${options.description || 'Requisi√ß√£o'}-Tentativa ${attempt+1}`);const response=await fetch(url,requestOptions);if(!response.ok){throw new Error(`HTTP ${response.status}:${response.statusText}`)}const data=await response.json();if(attempt > 0){this.feedback.showToast(`${options.description}realizada com sucesso ap√≥s ${attempt+1}tentativas`,'success')}return data}catch(error){lastError=error;console.warn(`Tentativa ${attempt+1}falhou:`,error.message);if(attempt < this.retryConfig.maxRetries){const delay=this.retryConfig.exponentialBackoff ? this.retryConfig.retryDelay*Math.pow(2,attempt):this.retryConfig.retryDelay;await this.sleep(delay)}}}const errorMessage=`${options.description || 'Opera√ß√£o'}falhou ap√≥s ${this.retryConfig.maxRetries+1}tentativas`;this.feedback.showToast(errorMessage,'error');throw new Error(`${errorMessage}:${lastError.message}`)}sleep(ms){return new Promise(resolve=> setTimeout(resolve,ms))}}class ManualControlSystem{constructor(){this.state=new DashboardState();this.feedback=new FeedbackSystem();this.api=new APIIntegration(this.feedback);this.autoRefresh=new AutoRefreshManager(this.state);this.initComponents();this.setupEventListeners();this.loadInitialState();console.log('‚úÖ ManualControlSystem inicializado completamente')}initComponents(){this.autoRefresh.setCallbacks({onRefresh:()=> this.handleRefreshAll(),onStart:(interval)=>{this.feedback.showToast(`Auto-refresh ativado(${interval/1000}s)`,'info')},onStop:()=>{this.feedback.showToast('Auto-refresh desativado','info')},onError:(error)=>{this.feedback.showToast('Erro no auto-refresh','error');console.error('Auto-refresh error:',error)}});this.state.on('database-changed',(newState,oldState)=>{this.updateUIBasedOnState();this.updateRecommendations()});this.state.on('charts-loaded',()=>{this.feedback.showToast('Gr√°ficos carregados com sucesso','success')});this.state.on('stats-loaded',()=>{this.feedback.showToast('Estat√≠sticas atualizadas','success')})}setupEventListeners(){this.bindControlButtons();document.addEventListener('keydown',(e)=>{this.handleKeyboardShortcuts(e)});document.addEventListener('chartsDataUpdated',(e)=>{this.state.updateChartsState(e.detail)})}bindControlButtons(){const buttonMappings={'btnVerifyDatabase':()=> this.handleVerifyDatabase(),'btnImportXML':()=> this.handleImportXML(),'btnClearCache':()=> this.handleClearCache(),'btnLoadCharts':()=> this.handleLoadCharts(),'btnLoadStats':()=> this.handleLoadStats(),'btnRefreshAll':()=> this.handleRefreshAll(),'autoRefreshToggle':(e)=> this.handleAutoRefreshToggle(e),'refreshInterval':(e)=> this.handleRefreshIntervalChange(e)};Object.entries(buttonMappings).forEach(([id,handler])=>{const element=document.getElementById(id);if(element){element.replaceWith(element.cloneNode(true));const newElement=document.getElementById(id);if(id==='autoRefreshToggle'){newElement.addEventListener('change',handler)}else if(id==='refreshInterval'){newElement.addEventListener('input',handler)}else{newElement.addEventListener('click',(e)=>{e.preventDefault();if(!newElement.disabled && !this.state.isOperationActive(id)){handler()}})}}})}async loadInitialState(){if(!this.state.database.last_check ||(Date.now()-new Date(this.state.database.last_check).getTime())> 300000){await this.handleVerifyDatabase(true)}this.updateUIBasedOnState();this.updateRecommendations()}async handleVerifyDatabase(silent=false){const operationId='verify-database';if(this.state.isOperationActive(operationId)){return}this.state.setOperationActive(operationId,{type:'database-check',silent});if(!silent){this.feedback.showLoading('manualControlPanel','Verificando banco de dados...')}try{const result=await this.api.checkDatabaseStatus();if(result.success){this.state.updateDatabaseState(result.status);if(!silent){this.feedback.showToast('Status do banco verificado','success',{subtitle:`${result.status.dis_count}DIs encontradas`})}this.state.setOperationComplete(operationId,{success:true})}else{throw new Error(result.message || 'Erro na verifica√ß√£o do banco')}}catch(error){console.error('Erro na verifica√ß√£o do banco:',error);if(!silent){this.feedback.showToast('Erro ao verificar banco de dados','error',{subtitle:error.message})}this.state.setOperationComplete(operationId,{success:false,error:error.message})}finally{if(!silent){this.feedback.hideLoading('manualControlPanel')}}}async handleImportXML(){const uploadInput=document.getElementById('fileInput');const uploadZone=document.getElementById('uploadZone');if(uploadInput){uploadInput.click()}else if(uploadZone){uploadZone.click()}else{this.showUploadModal()}}async handleClearCache(){const operationId='clear-cache';if(this.state.isOperationActive(operationId)){return}if(!confirm('Tem certeza que deseja limpar o cache? Esta a√ß√£o n√£o pode ser desfeita.')){return}this.state.setOperationActive(operationId,{type:'cache-clear'});this.feedback.showProgress('Limpando Cache','Removendo dados tempor√°rios...',0);try{this.feedback.updateProgress(25,'Limpando cache local...');localStorage.removeItem('etl_dashboard_cache');localStorage.removeItem('etl_charts_cache');sessionStorage.clear();this.feedback.updateProgress(50,'Limpando cache do servidor...');await this.api.clearCache();this.feedback.updateProgress(75,'Finalizando limpeza...');await new Promise(resolve=> setTimeout(resolve,1000));this.feedback.updateProgress(100,'Cache limpo com sucesso');setTimeout(()=>{this.feedback.hideProgress();this.feedback.showToast('Cache limpo com sucesso','success')},1000);this.state.setOperationComplete(operationId,{success:true})}catch(error){console.error('Erro ao limpar cache:',error);this.feedback.hideProgress();this.feedback.showToast('Cache local limpo(erro no servidor)','warning',{subtitle:error.message});this.state.setOperationComplete(operationId,{success:false,error:error.message})}}async handleLoadCharts(){if(!this.state.canLoadCharts()){this.feedback.showToast('N√£o √© poss√≠vel carregar gr√°ficos','warning',{subtitle:'Verifique se h√° dados suficientes no banco'});return}const operationId='load-charts';if(this.state.isOperationActive(operationId)){return}this.state.setOperationActive(operationId,{type:'charts-load'});this.feedback.showProgress('Carregando Gr√°ficos','Processando dados...',0);try{if(typeof window.expertzyCharts !=='undefined'){this.feedback.updateProgress(25,'Sistema de gr√°ficos detectado...');this.feedback.updateProgress(50,'Carregando dados dos gr√°ficos...');await window.expertzyCharts.manualLoadCharts();this.feedback.updateProgress(100,'Gr√°ficos carregados')}else{this.feedback.updateProgress(30,'Carregando dados via API...');const result=await this.api.loadChartsData();if(result.success){this.feedback.updateProgress(70,'Processando dados dos gr√°ficos...');this.state.updateChartsState(result.charts);document.dispatchEvent(new CustomEvent('chartsDataUpdated',{detail:result.charts}));this.feedback.updateProgress(100,'Gr√°ficos atualizados')}else{throw new Error(result.message || 'Erro ao carregar gr√°ficos')}}setTimeout(()=>{this.feedback.hideProgress()},1000);this.state.setOperationComplete(operationId,{success:true})}catch(error){console.error('Erro ao carregar gr√°ficos:',error);this.feedback.hideProgress();this.feedback.showToast('Erro ao carregar gr√°ficos','error',{subtitle:error.message});this.state.setOperationComplete(operationId,{success:false,error:error.message})}}async handleLoadStats(){if(!this.state.canLoadStats()){this.feedback.showToast('N√£o √© poss√≠vel carregar estat√≠sticas','warning',{subtitle:'Banco de dados sem dados suficientes'});return}const operationId='load-stats';if(this.state.isOperationActive(operationId)){return}this.state.setOperationActive(operationId,{type:'stats-load'});this.feedback.showLoading('manualControlPanel','Carregando estat√≠sticas...');try{const result=await this.api.loadStats();if(result.success){this.state.updateStatsState(result.data);this.updateStatCards(result.data);this.feedback.showToast('Estat√≠sticas atualizadas','success',{subtitle:`${Object.keys(result.data).length}m√©tricas carregadas`})}else{throw new Error(result.message || 'Erro ao carregar estat√≠sticas')}this.state.setOperationComplete(operationId,{success:true})}catch(error){console.error('Erro ao carregar estat√≠sticas:',error);this.feedback.showToast('Erro ao carregar estat√≠sticas','error',{subtitle:error.message});this.state.setOperationComplete(operationId,{success:false,error:error.message})}finally{this.feedback.hideLoading('manualControlPanel')}}async handleRefreshAll(){const operationId='refresh-all';if(this.state.isOperationActive(operationId)){return}this.state.setOperationActive(operationId,{type:'full-refresh'});this.feedback.showProgress('Atualizando Sistema','Iniciando atualiza√ß√£o completa...',0);try{const operations=[];let progress=0;this.feedback.updateProgress(progress,'Verificando status do banco...');operations.push(this.handleVerifyDatabase(true));await operations[0];progress=25;this.feedback.updateProgress(progress,'Status do banco verificado');if(this.state.canLoadStats()){this.feedback.updateProgress(progress,'Carregando estat√≠sticas...');operations.push(this.handleLoadStats());await operations[operations.length-1];progress=50;this.feedback.updateProgress(progress,'Estat√≠sticas carregadas')}if(this.state.canLoadCharts()){this.feedback.updateProgress(progress,'Carregando gr√°ficos...');operations.push(this.handleLoadCharts());await operations[operations.length-1];progress=100;this.feedback.updateProgress(progress,'Sistema completamente atualizado')}else{progress=100;this.feedback.updateProgress(progress,'Atualiza√ß√£o parcial conclu√≠da')}setTimeout(()=>{this.feedback.hideProgress();this.feedback.showToast('Sistema atualizado com sucesso','success',{subtitle:`${operations.length}opera√ß√µes executadas`})},1500);this.state.setOperationComplete(operationId,{success:true,operations:operations.length})}catch(error){console.error('Erro na atualiza√ß√£o completa:',error);this.feedback.hideProgress();this.feedback.showToast('Erro na atualiza√ß√£o do sistema','error',{subtitle:error.message});this.state.setOperationComplete(operationId,{success:false,error:error.message})}}handleAutoRefreshToggle(event){const enabled=event.target.checked;if(enabled){this.autoRefresh.start()}else{this.autoRefresh.stop()}this.updateAutoRefreshUI()}handleRefreshIntervalChange(event){const interval=parseInt(event.target.value)*1000;this.autoRefresh.updateInterval(interval);const intervalValue=document.querySelector('.interval-value');if(intervalValue){intervalValue.textContent=`${event.target.value}s`}}handleKeyboardShortcuts(event){if((event.ctrlKey || event.metaKey)&& event.shiftKey){switch(event.key.toLowerCase()){case 'v':event.preventDefault();this.handleVerifyDatabase();break;case 'r':event.preventDefault();this.handleRefreshAll();break;case 'c':event.preventDefault();this.handleLoadCharts();break;case 's':event.preventDefault();this.handleLoadStats();break;case 'i':event.preventDefault();this.handleImportXML();break}}}updateUIBasedOnState(){const buttons={'btnVerifyDatabase':true,'btnImportXML':this.state.database.connected,'btnClearCache':true,'btnLoadCharts':this.state.canLoadCharts(),'btnLoadStats':this.state.canLoadStats(),'btnRefreshAll':this.state.database.connected};Object.entries(buttons).forEach(([id,enabled])=>{const button=document.getElementById(id);if(button){button.disabled=!enabled;if(enabled){button.classList.remove('disabled')}else{button.classList.add('disabled')}}});this.updateStatusIndicators();this.updateCounters()}updateStatusIndicators(){const indicators={database:this.state.database.connected,schema:this.state.database.schema_ready,data:this.state.database.sufficient};Object.entries(indicators).forEach(([type,status])=>{const elements=document.querySelectorAll(`[data-status="${type}"]`);elements.forEach(element=>{element.className=`status-indicator ${status ? 'success':'error'}`})});const mainStatus=document.querySelector('.status-indicator-main');if(mainStatus){const isActive=this.state.database.sufficient;mainStatus.className=`status-indicator-main ${isActive ? 'active':'inactive'}`;const statusText=mainStatus.querySelector('.status-text');if(statusText){statusText.textContent=isActive ? 'Sistema Ativo':'Aguardando Dados'}}}updateCounters(){const disCountElements=document.querySelectorAll('[data-counter="dis-count"]');disCountElements.forEach(element=>{element.textContent=this.state.database.dis_count.toLocaleString()});const lastUpdateElements=document.querySelectorAll('[data-timestamp="last-update"]');lastUpdateElements.forEach(element=>{if(this.state.database.last_check){const date=new Date(this.state.database.last_check);element.textContent=date.toLocaleString('pt-BR',{day:'2-digit',month:'2-digit',hour:'2-digit',minute:'2-digit'})}else{element.textContent='Nunca'}})}updateRecommendations(){const nextAction=this.state.getNextRecommendedAction();const nextStepCard=document.querySelector('.next-step-card');if(nextStepCard){nextStepCard.className=`next-step-card ${nextAction.priority}`;const stepTitle=nextStepCard.querySelector('h4');const stepDesc=nextStepCard.querySelector('p');if(stepTitle)stepTitle.textContent=nextAction.title;if(stepDesc)stepDesc.textContent=nextAction.description}}updateStatCards(stats){Object.entries(stats).forEach(([key,value])=>{const valueElement=document.getElementById(`stat-${key.replace('_','-')}-value`);const changeElement=document.getElementById(`stat-${key.replace('_','-')}-change`);if(valueElement){if(typeof value==='object' && value.value !==undefined){valueElement.textContent=value.value;if(changeElement && value.change !==undefined){const changeSpan=changeElement.querySelector('span');if(changeSpan){const changeText=value.change > 0 ? `+${value.change}%`:`${value.change}%`;changeSpan.textContent=changeText}const trend=value.change > 0 ? 'positive':value.change < 0 ? 'negative':'neutral';changeElement.className=`stat-card-change ${trend}`}}else{valueElement.textContent=typeof value==='number' ? value.toLocaleString('pt-BR'):value}}})}updateAutoRefreshUI(){const status=this.autoRefresh.getStatus();const toggle=document.getElementById('autoRefreshToggle');if(toggle){toggle.checked=status.isRunning}const badge=document.querySelector('.section-badge.auto-refresh');if(badge){badge.textContent=`Auto-refresh:${status.isRunning ? 'ON':'OFF'}`;badge.className=`section-badge auto-refresh ${status.isRunning ? 'active':'inactive'}`}const intervalControl=document.querySelector('.interval-control');if(intervalControl){intervalControl.style.opacity=status.isRunning ? '1':'0.5';intervalControl.style.pointerEvents=status.isRunning ? 'auto':'none'}}showUploadModal(){const modal=document.createElement('div');modal.className='upload-modal-overlay';modal.innerHTML=` <div class="upload-modal"> <div class="upload-modal-header"> <h3>Importar XML de DI</h3> <button class="upload-modal-close">&times;</button> </div> <div class="upload-modal-body"> <div class="upload-zone" id="tempUploadZone"> <div class="upload-icon"> <svg width="48" height="48" viewBox="0 0 24 24" fill="none"> <path d="M21 15V19C21 20.1046 20.1046 21 19 21H5C3.89543 21 3 20.1046 3 19V15M17 8L12 3M12 3L7 8M12 3V15" stroke="currentColor" stroke-width="2"/> </svg> </div> <h4>Arraste arquivos XML aqui</h4> <p>ou clique para selecionar</p> <input type="file" accept=".xml" multiple style="display:none;"> </div> </div> </div> `;document.body.appendChild(modal);modal.querySelector('.upload-modal-close').addEventListener('click',()=>{modal.remove()});modal.addEventListener('click',(e)=>{if(e.target===modal){modal.remove()}});const uploadZone=modal.querySelector('#tempUploadZone');const fileInput=modal.querySelector('input[type="file"]');uploadZone.addEventListener('click',()=>{fileInput.click()});fileInput.addEventListener('change',(e)=>{if(e.target.files.length > 0){this.feedback.showToast(`${e.target.files.length}arquivo(s)selecionado(s)`,'info',{subtitle:'Funcionalidade de upload ser√° implementada'});modal.remove()}})}getState(){return this.state}getFeedback(){return this.feedback}getAutoRefresh(){return this.autoRefresh}async forceRefresh(){return this.handleRefreshAll()}async verifySystem(){return this.handleVerifyDatabase()}}let manualControlSystem;function initManualControlSystem(){if(window.manualControlSystem){console.warn('ManualControlSystem j√° foi inicializado');return window.manualControlSystem}manualControlSystem=new ManualControlSystem();window.manualControlSystem=manualControlSystem;window.dashboardState=manualControlSystem.getState();window.feedbackSystem=manualControlSystem.getFeedback();window.verifyDatabaseStatus=()=> manualControlSystem.verifySystem();window.loadChartsManually=()=> manualControlSystem.getState().canLoadCharts()? manualControlSystem.handleLoadCharts():manualControlSystem.getFeedback().showToast('Dados insuficientes para gr√°ficos','warning');window.loadStatsManually=()=> manualControlSystem.getState().canLoadStats()? manualControlSystem.handleLoadStats():manualControlSystem.getFeedback().showToast('Dados insuficientes para estat√≠sticas','warning');window.refreshAllManually=()=> manualControlSystem.forceRefresh();console.log('‚úÖ ManualControlSystem inicializado e exposto globalmente');return manualControlSystem}if(document.readyState==='loading'){document.addEventListener('DOMContentLoaded',initManualControlSystem)}else{initManualControlSystem()}if(typeof module !=='undefined' && module.exports){module.exports={ManualControlSystem,DashboardState,AutoRefreshManager,FeedbackSystem,APIIntegration}}